function getVersion(){return"0.10.2"}function isDebug(){return!1}function getSecLevel(pass){seed=CryptoJS.MD5(pass).toString(),sum=0;for(let i=0;i<seed.length;i++){let currentChar;switch(seed.charAt(i).toLowerCase()){case"0":case"1":case"2":case"3":sum+=4;break;case"4":case"5":case"6":case"7":sum+=3;break;case"9":case"a":case"b":case"c":sum+=5;break;case"d":case"e":case"f":sum+=2}}return 1024+sum}function getPassword(pass){if(""==pass)return"";console.log("Started Calculating Password Hash.");let seed,hashPass=returnHash(CryptoJS.SHA512(pass).toString()+CryptoJS.SHA224(pass).toString()+CryptoJS.SHA256(pass).toString()+CryptoJS.SHA1(pass).toString()+CryptoJS.SHA3(pass).toString()+CryptoJS.SHA384(pass).toString()+CryptoJS.MD5(pass).toString()),secLevel=getSecLevel(pass);for(let i=0;i<secLevel;i++)hashPass=returnHash(hashPass);return hashPass=CryptoJS.SHA512(hashPass).toString()+CryptoJS.SHA224(hashPass).toString()+CryptoJS.SHA256(hashPass).toString()+CryptoJS.SHA1(hashPass).toString()+CryptoJS.SHA3(hashPass).toString()+CryptoJS.SHA384(hashPass).toString()+CryptoJS.MD5(hashPass).toString(),console.log("Hashed Password:\n"+hashPass),hashPass}function returnHash(seed){let key=seed;for(let i=0;i<seed.length;i++){let currentChar;switch(seed.charAt(i).toLowerCase()){case"0":case"1":key=CryptoJS.MD5(key).toString();break;case"2":case"3":key=CryptoJS.SHA1(key).toString();break;case"4":case"5":case"6":key=CryptoJS.SHA3(key).toString();break;case"7":case"9":key=CryptoJS.SHA256(key).toString();break;case"a":case"b":case"c":key=CryptoJS.SHA512(key).toString();break;case"d":case"e":case"f":key=CryptoJS.SHA384(key).toString()}}return key}function encrypt(message,key,mode){let testHex,encryptedHex,i=0,BlowfishString,b64Encrypted,encryptedEmoji;do{if(console.log("Start Blowfish Encryption..."),BlowfishString=CryptoJS.Blowfish.encrypt(message,key).toString(),console.log("Start AES Encryption..."),b64Encrypted=CryptoJS.AES.encrypt(BlowfishString,key).toString(),"b64"==mode)return console.log("Encrypted b64: b64:"+b64Encrypted),"b64:"+b64Encrypted;if(encryptedHex=base64ToHex(b64Encrypted),encryptedHex=encryptedHex.substring(16),"hex"==mode)return console.log("Encrypted Hex: 0x:"+encryptedHex),"0x:"+encryptedHex;if(encryptedEmoji=hexToEmo(encryptedHex),testHex=emoToHex(encryptedEmoji),i>500)return console.log("Encryption failed."),"";i++}while(testHex!=encryptedHex);return encryptedEmoji}function decrypt(message,key,mode){let encryptedHex="",encryptedb64="";"emoji"==mode?(console.log("Decrypt as Emoji."),encryptedHex=emoToHex(message),encryptedHex="53616C7465645F5F"+encryptedHex,encryptedb64=hexToBase64(encryptedHex)):"hex"==mode?(console.log("Decrypt as Hexadecimal."),encryptedHex=message.substr(3),encryptedHex="53616C7465645F5F"+encryptedHex,encryptedb64=hexToBase64(encryptedHex)):"b64"==mode&&(console.log("Decrypt as Base64."),encryptedb64=message.substr(4)),console.log("Message: "+message),console.log("Encrypted Hex: "+encryptedHex),console.log("Encrypted B64: "+encryptedb64),console.log("Start AES Decryption...");let AESDecryptedString=CryptoJS.AES.decrypt(encryptedb64,key).toString(CryptoJS.enc.Utf8),decrypted;return console.log("Start Blowfish Decryption..."),CryptoJS.Blowfish.decrypt(AESDecryptedString,key).toString(CryptoJS.enc.Utf8)}function hexToEmo(hex){let counter_to_n=0,n=0,emojiStringOutput="",indexArray=[];emojiArray=getEmojiArray();for(let i=1;i<hex.length;i+=2){let duplet=hex[i-1]+hex[i],index=parseInt("0x"+duplet),j;indexArray[(i-1)/2]=index}for(let i=0;i<indexArray.length;i++){let j=indexArray[i];emojiStringOutput+=emojiArray[j]+"​"}return emojiStringOutput}function emoToHex(emojiString){let emojiArray=getEmojiArray(),indexArray=[],string="",j=0;emojiString.split("​").forEach((function(c){if(string=c,string){for(let i=0;i<emojiArray.length;i++)string===emojiArray[i]&&(indexArray[j]=i);j++}}));let hexString="",index=0;for(let i=0;i<indexArray.length;i++)index=indexArray[i],index<16&&(hexString+="0"),hexString+=index.toString(16);return hexString.toUpperCase()}function getEmojiArray(array){let emojis=[["😀","😃","😄","😁","😆","😅","😂","🤣","🥲","☺️","😊","😇","🙂","🙃","😉","😌","😍","🥰","😘","😗","😙","😚","😋","😛","😝","😜","🤪","🤨","🧐","🤓","😎","🥸","🤩","🥳","😏","😒","😞","😔","😟","😕","🙁","☹️","😣","😖","😫","😩","🥺","😢","😭","😤","😠","😡","🤬","🤯","😳","🥵","🥶","😱","😨","😰","😥","😓","🤗","🤔","🤭","🤫","🤥","😶","😐","😑","😬","🙄","😯","😦","😧","😮","😲","🥱","😴","🤤","😪","😵","🤐","🥴","🤢","🤮","🤧","😷","🤒","🤕","🤑","🤠","😈","👿","👹","👺","🤡","💩","👻","💀","☠️","👽","👾","🤖","🎃","😺","😸","😹","😻","😼","😽","🙀","😿","😾"],["👋","🤚","🖐","✋","🖖","👌","🤌","🤏","✌️","🤞","🤟","🤘","🤙","👈","👉","👆","🖕","👇","☝️","👍","👎","✊","👊","🤛","🤜","👏","🙌","👐","🤲","🤝","🙏","✍️","💅","🤳","💪","🦾","🦵","🦿","🦶","👣","👂","🦻","👃","🫀","🫁","🧠","🦷","🦴","👀","👁","👅","👄","💋","🩸"],["🍏","🍎","🍐","🍊","🍋","🍌","🍉","🍇","🍓","🫐","🍈","🍒","🍑","🥭","🍍","🥥","🥝","🍅","🍆","🥑","🥦","🥬","🥒","🌶","🫑","🌽","🥕","🫒","🧄","🧅","🥔","🍠","🥐","🥯","🍞","🥖","🥨","🧀","🥚","🍳","🧈","🥞","🧇","🥓","🥩","🍗","🍖","🦴","🌭","🍔","🍟","🍕","🫓","🥪","🥙","🧆","🌮","🌯","🫔","🥗","🥘","🫕","🥫","🍝","🍜","🍲","🍛","🍣","🍱","🥟","🦪","🍤","🍙","🍚","🍘","🍥","🥠","🥮","🍢","🍡","🍧","🍨","🍦","🥧","🧁","🍰","🎂","🍮","🍭","🍬","🍫","🍿","🍩","🍪","🌰","🥜","🍯","🥛","🍼","🫖","☕️","🍵","🧃","🥤","🧋","🍶","🍺","🍻","🥂","🍷","🥃","🍸","🍹","🧉","🍾","🧊","🥄","🍴","🍽","🥣","🥡","🥢","🧂"],["⚽️","🏀","🏈","⚾️","🥎","🎾","🏐","🏉","🥏","🎱","🪀","🏓","🏸","🏒","🏑","🥍","🏏","🪃","🥅","⛳️","🪁","🏹","🎣","🤿","🥊","🥋","🎽","🛹","🛼","🛷","⛸","🥌","🎿","⛷","🏂","🪂","🏋️‍♀️","🏋️","🏋️‍♂️","🤼‍♀️","🤼","🤼‍♂️","🤸‍♀️","🤸","🤸‍♂️","⛹️‍♀️","⛹️","⛹️‍♂️","🤺","🤾‍♀️","🤾","🤾‍♂️","🏌️‍♀️","🏌️","🏌️‍♂️","🏇","🧘‍♀️","🧘","🧘‍♂️","🏄‍♀️","🏄","🏄‍♂️","🏊‍♀️","🏊","🏊‍♂️","🤽‍♀️","🤽","🤽‍♂️","🚣‍♀️","🚣","🚣‍♂️","🧗‍♀️","🧗","🧗‍♂️","🚵‍♀️","🚵","🚵‍♂️","🚴‍♀️","🚴","🚴‍♂️","🏆","🥇","🥈","🥉","🏅","🎖","🏵","🎗","🎫","🎟","🎪","🤹","🤹‍♂️","🤹‍♀️","🎭","🩰","🎨","🎬","🎤","🎧","🎼","🎹","🥁","🪘","🎷","🎺","🪗","🎸","🪕","🎻","🎲","♟","🎯","🎳","🎮","🎰","🧩"]],totalPack=[];for(let i=0;i<emojis.length;i++)totalPack=totalPack.concat(emojis[i]);return totalPack}function generateRandomEmo(){let length=32*(2+Math.floor(4*Math.random())),emoString="",i=0;for(emoArray=getEmojiArray();i<length;){let random=Math.floor(255*Math.random());emoString+=emoArray[random],++i}return emoString}function checkInputString(inputString){if(""==inputString)return console.log("Input is empty"),!1;if("0x:"===inputString.slice(0,3))return console.log("Input is encoded Hex"),!0;if("b64:"===inputString.slice(0,4))return console.log("Input is encoded B64"),!0;let emojiArray=getEmojiArray(),emojiString,indexArray=[],string="",j=0;inputString.split("​").forEach((function(c){if(string=c,string){for(let i=0;i<emojiArray.length;i++)string===emojiArray[i]&&(indexArray[j]=i);j++}}));let true_count=0,index;for(let i=0;i<indexArray.length;i++)index=indexArray[i],index<256&&index>0&&true_count++;return true_count>20&&(console.log("Input is Encoded Emoji"),!0)}